{"version":3,"sources":["component/layout/SignedInLinks.js","store/actions/authAction.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/projects/CreateProject.js","store/actions/projectAction.js","App.js","registerServiceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","createProject","history","push","inherits","createClass","authorID","add","objectSpread","authorId","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9f0c835.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';  \nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authAction';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect (null, mapDispatchToProps)(SignedInLinks);","export const signIn = ( credentials ) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch ({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      dispatch ({ type: 'LOGIN_ERROR', err }) \n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch ({ type: 'SIGNOUT_SUCCESS' });\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName : newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch ({ type: 'SIGNUP_SUCCESS'})\n    }).catch(err => {\n      dispatch ({ type: 'SIGNUP_ERROR', err})\n    })\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n      <li><NavLink to=\"/signin\">Log In</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props ;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  // console.log(auth);\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">IrsalPlan</Link>\n        { links } \n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return(\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id} >\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render (){\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" /> \n    return(\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] }, // desc means descending\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']} // desc means descending\n  ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  // console.log(props)\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />\n  \n  if (project){\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by { project.authorFirstName }  { project.authorLastName }</div>\n            <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authAction';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n    // console.log(this.state);\n  }\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch (signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authAction';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signUp(this.state);\n  }\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{authError}</p> : null }\n              </div>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectAction';\nimport { Redirect } from 'react-router-dom';\n\nexport class CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state)\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n    \n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make asycn call to database \n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorID = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorID,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project }); \n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err});\n    })\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/projects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","const initState = {\n   authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type){\n    case 'LOGIN_ERROR':\n    console.log('Login Error');\n      return {\n        ...state, \n        authError: 'Login Failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('Login Success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('Sign out success');\n      return state;\n    case 'SIGNUP_SUCCESS':\n      console.log('Signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('Signup failed');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default: \n      return state;\n  }\n};\n\nexport default authReducer","const initState = {\n  projects: [\n    {id: '1', title: 'test 1', content: 'blah blah blah'},\n    {id: '2', title: 'test 1', content: 'blah blah blah'},\n    {id: '3', title: 'test 1', content: 'blah blah blah'}\n  ]\n};\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error', action.err);\n      return state;\n    default: \n      return state;\n  }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers ({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyBWZ1o1BWwdzt_1B6T6YcDsOeqNbeUQnqQ\",\n  authDomain: \"react-firebase-irsalplan.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-irsalplan.firebaseio.com\",\n  projectId: \"react-firebase-irsalplan\",\n  storageBucket: \"react-firebase-irsalplan.appspot.com\",\n  messagingSenderId: \"460950409124\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n  // combines several store using compose\n  compose(\n    // first store enhancer\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    // second store enhancer\n    reduxFirestore(fbConfig), // redux binding for firestore\n    // third store enhancer\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\n    )\n  );\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  registerServiceWorker();\n})"],"sourceRoot":""}